@use '~@angular/material' as mat;
@import "../tailwind.scss";

@mixin generateClasses($theme) {
  @each $paletteName, $palette in $theme {
    @if $paletteName != "color" {
      @if type-of($palette) == map {
        @each $key, $color in $palette {
          @if type-of($color) == color {
            @include buildClasses(#{$paletteName}-#{$key}, $color);
          }
        }

        $defaultColor: mat.get-color-from-palette($palette, 500);
        @include buildClasses($paletteName, $defaultColor);
        @include buildMatClasses($paletteName, $palette);
      }
    }
  }
}

@mixin buildClasses($className, $color) {
  .bg-#{$className} {
    background-color: $color;
  }

  .text-#{$className} {
    color: $color;
  }

  .border-#{$className} {
    border-color: $color;
  }

  .divide-#{$className} {
    border-color: $color;
  }

  .ring-#{$className} {
    border-color: rgba($color, var(--tw-ring-opacity));
  }

  .ring-offset-#{$className} {
    --tw-ring-offset-color: $color;
    box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
  }
}

@mixin buildMatClasses($className, $palette) {
  $bgColor: mat.get-color-from-palette($palette, 500);
  $color: mat.get-color-from-palette($palette, "500-contrast");
  @if type-of($bgColor) == color {
    @if type-of($color) == color {
      .mat-#{$className}:not(.mat-form-field):not(.mat-select-panel):not(.mat-datepicker-content):not(.mat-button-disabled):not(.mat-chip):not(.mat-checkbox):not(.mat-radio-button) {
        background-color: $bgColor !important;
        color: $color !important;
      }
    }
  }
}
